<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
">

	<!-- 自带连接池 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/java?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<bean id="dbcpDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/java?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<!-- 管理JDBC -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg name="dataSource" ref="dbcpDataSource"/>
	</bean>

	<context:component-scan base-package="pro.hyder" />

	<!-- 配置平台事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 事务通知 -->
	<!-- tx:advice 对应的处理器就是 TransactionInterceptor类 (实现了 MethodInterceptor) -->
	<!-- TransactionInterceptor类 实现事务是通过 transaction-manager属性指定值进行事务管理 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 设置事务管理信息 -->
		<tx:attributes>
			<!-- 增删改使用 REQUIRED 事务传播行为 -->
			<!-- 查询使用 read-only -->
			<tx:method name="transfer*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

	<!-- 基于 AspectJ xml 方式实现声明式事务 -->
	<aop:config>
		<!-- aop:advisor 标签使用传统spring aop开发方式实现-->
		<!-- spring已经实现了该增强功能 spring 使用的是 MethodInterceptor接口方式实现 -->
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* *..*.*ServiceImpl.*(..))"/>
	</aop:config>

</beans>